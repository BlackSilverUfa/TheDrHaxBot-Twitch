(

$positive := [
    '–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞ YEPPERS',
    '–º–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º YEPPERS',
    '–Ω–∏–∫–∞–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π YEPPERS',
    '–∞–±—Å–æ–ª—é—Ç–ª–∏ YEPPERS',
    '–Ω—É –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ YEPPERS',
    '–¥–∞ YEPPERS'
];

$plausible := [
    '—Ö–æ—Ä–æ—à–∏–µ —à–∞–Ω—Å—ã SeemsGood',
    '–≤–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ SeemsGood',
    '–¥—É–º–∞—é, —á—Ç–æ –¥–∞ SeemsGood',
    '–Ω–µ –∏—Å–∫–ª—é—á–µ–Ω–æ SeemsGood',
    '–Ω–µ–º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ SeemsGood'
];

$uncertain := [
    '–ø–æ–∫–∞ –Ω–µ —è—Å–Ω–æ peepoThink',
    '–Ω–µ —É–≤–µ—Ä–µ–Ω peepoThink',
    '—Ç—É—Ç –≤—Å—ë –Ω–µ —Ç–∞–∫ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ peepoThink',
    '—Å–∫–∞–∂—É –∑–∞ –Ω–µ–±–æ–ª—å—à—É—é —Å—É–º–º—É, BSUDAI',
    '–Ω–µ —Å—Ç–æ–∏—Ç –≤—Å–∫—Ä—ã–≤–∞—Ç—å —ç—Ç—É —Ç–µ–º—É. –í—ã –º–æ–ª–æ–¥—ã–µ, —à—É—Ç–ª–∏–≤—ã–µ, –≤–∞–º –≤—Å–µ –ª–µ–≥–∫–æ. –≠—Ç–æ –Ω–µ —Ç–æ. –ü–æ–≥–∏–±–Ω—É—Ç –í–°–Å monkaGunshake'
];

$unplausible := [
    '–¥–∞ –Ω–µ—Ç, –Ω–∞–≤–µ—Ä–Ω–æ–µ BSUHee',
    '—à–∞–Ω—Å—ã –Ω–µ –æ—á–µ–Ω—å BSUHee',
    '—Å–∫–æ—Ä–µ–µ –Ω–µ—Ç, —á–µ–º –¥–∞ BSUHee',
    '—è –±—ã –Ω–µ –Ω–∞–¥–µ—è–ª—Å—è BSUHee'
];

$negative := [
    '–¥–∞–∂–µ –Ω–µ –Ω–∞–¥–µ–π—Å—è NOPERS',
    '–≤–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ NOPERS',
    '–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –Ω–µ—Ç NOPERS',
    '–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ö–†–ê–ô–ù–ï –º–∞–ª–∞ NOPERS',
    '–Ω–∏–∫–æ–≥–¥–∞ –≤ –∂–∏–∑–Ω–∏ NOPERS',
    '–Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –Ω–µ—Ç NOPERS'
];

$continuations := [
    '–∞ –≤—Å—ë—ë—ë BSUHee',
    '–∞–Ω—è ANYA',
    '–∞–Ω–ª–∞–∫–∏ BSUHee',
    '–∞–ª–ª–æ peepoPhone',
    '–∞–¥–∞, —è –ª—é–±–ª—é —Ç–µ–±—è ANYA',
    '–∞–±—Å–æ–ª—é—Ç–ª–∏ YEPPERS',
    '–∞—ã–∞—ã–∞ ANYA',
    '–∞—É—Ñ üê∫',
    '–∞–ø—á—Ö–∏ ANYA',
    '–∞–º–∞–º–∞–º popCat',
    '–∞–º–æ–≥—É—Å ‡∂û',
    '–∞—è—è AYAYA',
    '–∞–≥–∞ YEPPERS',
    'ass gachiBASS',
    
    '–±–∞–Ω monkaBAN',
    '–±–∞—Ç–∞—Ç BSULoot',
    '–±—É–±–∞ BOOBA',
    '–±–æ—Ä—è CatCrying',
    '–±–æ—Ä–æ–¥–∞ popCat',
    '–±–ª—é–π –ø–µ–π dead5What MedTime',
    '–±–µ–∂–∞—Ç—å –Ω–µ–∫—É–¥–∞ ariW',
    
    '–≤–µ—Ä—Ç—É—Ñ–∞–π–∑–µ–Ω bUrself',
    '–≤—ã –ø—Ä–æ–¥–æ—ë—Ç–µ —Ä—ã–±–æ–≤? ANYA',
    '–≤—ã—Ö–æ–¥–Ω–æ–π peepoComfy',

    '–≥–∏–≤–∞—Å–∞—Å–∞–π monkaChrist',

    '–µ—Å–ª–∏ –Ω–µ –º—ã, —Ç–æ –∫—Ç–æ? KKomrade',

    '–æ–æ–æ, —ç–ª–¥–µ–Ω —Ä–∏–Ω–≥ KOgasm',
    '–æ–ø –æ–ø PepoG',
    '–æ–ø –ø–∞ Pepega',
    '–æ–ø–æ–ª–∑–µ–Ω—å popCat',
    '–æ–≥–Ω–µ–æ–ø–∞—Å–Ω–æ gachiOnFIRE',
    '–æ–º—Å–∫ LetMeIn',

    '–º–∏—Ñ–∞ BibleThump',
    '–º–∏–ª–∞ AYAYA',
    '–º–µ–≥–∞–º–∞–∫–∏ gachiHYPER',
    
    '–Ω—É –î–∏–∏–∏–º–∞ Jebaited',
    
    '—Ä–µ–∞–∫—Ü–∏—è –º–∞–Ω–≥—É—Å—Ç–∞ Pepega',
    
    '—Å–∫–∞–π—Ä–∏–º toddW',
    '—Å–æ—Å –º—ã—Å–ª–æ–º ANYA',
    '—Å–æ–≤ –ø–∞–¥–µ–Ω–∏–µ BSUbl',
    '—Å—É–ø–µ—Ä YEPPERS',

    '–Ω–µ –µ—à, –ø–æ–¥—É–º–æ–π CatCrying',

    '–∏—Å–ø–∞–Ω—Ü—ã! BSURage',
    '–∏–≥—Ä—ã YEPPERS',
    '–∏–≥–æ—Ä—å —Ç–æ–Ω–µ—Ç CatCrying',
    '–∏—Ç–∞–Ω ariW',

    '—É–ª—å BSUWait',
    '—É–≤—É UwU',
    '—É—É—É—É–£–£–£–£ BSUbl',
    '—É–æ—Ç —Ç–∞–∫ —É–æ—Ç BSUFlex',

    '–ø–µ—Ä–µ–∏–≥—Ä–∞—é –∏ —É–Ω–∏—á—Ç–æ–∂—É maestroW',
    '–ø–ª–∞–Ω–µ—Ä –¥–∞–π Jebaited',
    '–ø–æ–≤—Ç–æ—Ä YEPPERS',
    '–ø–æ–ø–æ–ª–∑–µ–Ω—å popCat',
    '–ø–∏–ø–∞ PETTHEPEEPO',
    '–ø–æ–ø–∞ peepoGiggles',
    '–ø–æ–Ω–∏–º–∞—é YEPPERS',
    '–ø–æ–≥–∏–±–Ω—É—Ç –í–°–Å monkaEyes',
    '–ø–æ–ø–æ–ª–∞ AYAYA',
    '–¥–µ–≤–æ–ª–∞ AYAYA',
    
    '—Ç–∞—à–æ–Ω CatCrying',
    '—Ç—ã –∫—Ç–æ? Jebaited',
    '—Ç—ã –Ω–µ –∏–º–µ–µ—à—å –ø—Ä–∞–≤–∞, –æ —Ç—ã –Ω–µ –∏–º–µ–µ—à—å –ø—Ä–∞–≤–∞ LetMeIn',
    
    '–∫–± ANYA',
    '–∫—Ç–æ, –µ—Å–ª–∏ –Ω–µ –º—ã? KKomrade',
    '–∫—É–∫–∏–Ω–≥ —Å—Ç—Ä–∏–º –∑–∞–≤—Ç—Ä–∞ Agakakskagesh',
    '–∫—É–ª—è-–±—É–ª—è ANYA',
    '–∫—É–ª—è–ª—è ANYA',
    '–∫—É–∫—É, –∏–ø—Ç–∞ ANYA',
    '–∫—É–∫—É—Å–∏–∫–∏ NomNom',
    '–∫—É–ø–∏ toddW',
    '–∫—Ä—ã–∂–æ–≤–Ω–∏–∫ —Ç–µ—Ä–ø–∫–∏–π, —Å–ª–∞–¥–∫–∞—è —Å–∏—Ä–µ–Ω—å ANYA',
    '–∫–æ–¥–∑–∏–º–∞ –≥–µ–Ω–∏–π Kojimaptyp',
    '–∫–æ–∑–∏ peepoBlanket',
    '–∫—Ç—É–ª—Ö—É —Ñ—Ö—Ç–∞–≥–Ω Squid1 Squid2 Squid3 Squid4',
    
    '—Ñ—ç–º—ç–ª—ç ANYA',
    
    '—ã–∞—ã–∞—ã ANYA',
    
    '—Ö—É–±–∏–∫–∏ ANYA',
    
    '—ç–±–±–∏ pepeSmack',
    '—ç–Ω–≤–∞–π—Ä–æ–Ω–º–µ–Ω—Ç–∞–ª —Å—Ç–æ—Ä–∏—Ç–µ–ª–ª–∏–Ω–≥ ANYA',
    
    '—è –æ—Ö–æ—Ç–Ω–∏–∫ Pepega'
];

$choose := function ($l) {(
    $id := $floor($random() * $count($l));
    $l[$id]
)};

$choice := function ($x) {
    $choose([
        '—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ ' & $x & ' peepoThink',
        '–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ ' & $x & ' YEPPERS',
        $x & ' ‚Äî –Ω–∞—à –≤—ã–±–æ—Ä SeemsGood',
        '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ ' & $x & ' peepoThink',
        '–∫–æ–Ω–µ—á–Ω–æ –∂–µ ' & $x & ' YEPPERS'
    ])
};

$indexOf := function($list, $item) {
    ($list ~> $map(function($x, $i) {
        $x = $item ? $i : null
    }) ~> $filter(function($x) { $x != null }))[0]
};

$translate := function($text, $from, $to) {(
    $from := $split($from, '');
    $to := $split($to, '');

    $text
        ~> $split('')
        ~> $map(function($x) {(
            $index := $from ~> $indexOf($x);
            $index != null ? $to[$index] : $x
        )})
        ~> $join()
)};

$distinctStr := function ($x) {
    $x ~> $split('') ~> $map(function($y, $i) {
        $y ~> $match(/[–∞–µ–∏–æ—É—ã—ç]/) and $substring($x, $i + 1, 1) = $y ? '' : $y
    }) ~> $join()
};

$startsWith := function ($x, $y) {(
    $substring($x, 0, $length($y)) = $y
)};

$startsWithAny := function ($x, $list) {
    $map($list, function($y) { $startsWith($x, $y) }) ~>
    $filter(function ($v) { $v = true }) ~> $count > 0
};

$continue := function($text) {(
    $text := $text
        ~> $lowercase
        ~> $translate('a', '–∞')
        ~> $distinctStr
        ~> $replace(/[.‚Ä¶]*$/, '');

    $length($text) = 0 ? null :

    $continuations ~> $map(function($x) {
        $startsWith($x ~> $translate('a', '–∞'), $text) ? (
            $substring($x, $length($text))
        ) : null
    }) ~> $filter(function($x) { $x }) ~> $choose
)};

(parsed.query ~> $length = 0) ? (
    $vowelsmatch := payload.message ~> $match(/^!—à+([–∞–æ]+)—Ä+/i);
    $vowels := $vowelsmatch ? $vowelsmatch.groups[0] : '–∞';
    $choose([
        '—á—Ç' & $translate($vowels, '–ê–∞–û–æ–£—É', '–û–æ–ê–∞–û–æ') & '? Jebaited',
        $translate($vowels, '–û–æ', '–ê–∞') & '? Jebaited'
    ])
) :
(parsed.query ~> $match(/ (–∏–ª–∏|or) /)) ? (
    $options := parsed.query
        ~> $substringBefore('?') ~> $replace(/ (–∏–ª–∏|or) /, ', ')
        ~> $split(',') ~> $map(function ($i) { $trim($i) });

    $options := $startsWithAny($options[0] ~> $lowercase, [
        '–≤–æ —á—Ç–æ',
        '—á—Ç–æ',
        '–∫–∞–∫',
        '–≥–¥–µ',
        '–∫—É–¥–∞',
        '–∫–æ–≥–¥–∞',
        '–∫—Ç–æ'
    ]) ? $options[[1..$count($options)]] : $options;

    ($count($options) = 2 and '–±—É–¥—å' = $options[0] and '–Ω–µ –±—É–¥—å' = $options[1]) ? '—Å–¥–µ–ª–∞–π –∂–µ —á—Ç–æ-–Ω–∏–±—É–¥—å LetMeIn' :
    ($count($options) = 2 and '–Ω–µ ' & $options[0] = $options[1]) ? '–≤–æ—Ç –≤ —á—ë–º –≤–æ–ø—Ä–æ—Å Kojimaptyp' :
    ($count($options) = 2 and 'not ' & $options[0] = $options[1]) ? 'that is the question Kojimaptyp' :
    ($count($options) = 2 and $options[0] = $options[1]) ? '–¥–∞ YEPPERS' :
    (
        $choice($choose($options))
    );
) :
(parsed.query ~> $match(/–æ—Ç [+-]?[0-9]+ –¥–æ [+-]?[0-9]+/i)) ? (
    $range := (parsed.query ~> $match(/–æ—Ç ([+-]?[0-9]+) –¥–æ ([+-]?[0-9]+)/i)).groups
        ~> $map(function ($v) { $number($v ~> $replace(/\+/, '')) }) ~> $sort;

    $x := $range[1] - $range[0];
    $x := $random() * $x * 1.2 + $range[0] - $x * 0.1;

    $x > $range[1] ? '–¥—É–º–∞—é, —á—Ç–æ –±–æ–ª—å—à–µ ' & $range[1] & ' YEPPERS' :
    $x < $range[0] ? '–¥—É–º–∞—é, —á—Ç–æ –º–µ–Ω—å—à–µ ' & $range[0] & ' NOPERS' :
    $choice($round($x))
) :
(parsed.emotesOnly and $count(parsed.emotes) <= 3) ? (
    parsed.query_filtered
) :
(parsed.query_filtered ~> $match(/^(—Ç—ã –∫—Ç–æ|–∫—Ç–æ —Ç—ã)/)) ? (
    $choose([
        '–∞ —Ç—ã –∫—Ç–æ? Jebaited',
        '–∫–æ–Ω—å –≤ –ø–∞–ª—å—Ç–æ Jebaited',
        '–Ω–µ—Ç, —Ç—ã –∫—Ç–æ? Jebaited'
    ])
) :
(parsed.query_filtered ~> $continue) ? (
    '...' & $continue(parsed.query_filtered)
) :
(parsed.query_filtered ~> $match(/^–ø–∏–Ω–≥/i)) ? (
    "–ø–æ–Ω–≥ Pepega"
) :
(parsed.query ~> $match(/^–º–æ–∂–µ—Ç —á–∞–π–∫—É/)) ? '–∞ –º–æ–∂–µ—Ç —Ç–µ–±—è?! Jebaited' :
(parsed.query ~> $match(/^(–Ω–µ—Ç,? )?—Ç—ã –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–π/)) ? (
    $choose([
        '–¥–∞, —è —Ç–∞–∫–æ–π Kappa',
        '–Ω–µ—Ç, —Ç—ã –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–π! keanU'
    ])
):
(parsed.query ~> $match(/^omae\swa\smou\sshindeiru/i)) ? 'NANI?! BSURage' :
(parsed.query ~> $match(/^ehe/i)) ? 'EHE TTE NANDAYO?! BSURage' :
(parsed.query ~> $match(/—è\s(—à–µ–ø–Ω—É|–ø—Ä–æ—à–µ–ø—á—É)\s—Ç–µ–±–µ\s–Ω–∞\s—É—à–∫–æ/)) ? '–∞–Ω–Ω–∏–≥–∏–ª—è—Ç–æ—Ä–Ω–∞—è –ø—É—à–∫–∞! PepegaAim' :
(parsed.query ~> $match(/^[UO][wœâv][UO]$/i)) ? $choose(['UœâU', '√≤œâ√≥', 'OœâO', '‡≤†_‡≤†', 'üëÅ üëÑ üëÅ']) :
(parsed.query ~> $match(/^(PETTHE|(–Ω–µ )?–ø–∏–ø(–∞–π|–Ω–∏|\ |$))/)) ? '–ø–∏–ø ' & $choose([
    'PETTHEPEEPO',
    'PETTHEAPTEEPO',
    'PETTHECAT',
    'PETTHEEVAN',
    'PETTHEMOD'
]) :
(parsed.query ~> $match(/^(–∞\s+)?–±—É–¥–µ—Ç\s+–∫—É–∫–∏–Ω–≥/)) ? $choose([
    '–∫–æ–Ω–µ—á–Ω–æ –±—É–¥–µ—Ç, —É–∂–µ –∑–∞–≤—Ç—Ä–∞ Agakakskagesh',
    '–∫—É–∫–∏–Ω–≥ —Å—Ç—Ä–∏–º –∑–∞–≤—Ç—Ä–∞! –ï—Å–ª–∏ –∑–∞–≤—Ç—Ä–∞ —É–∂–µ –Ω–∞—Å—Ç—É–ø–∏–ª–æ, –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—â—ë —Ä–∞–∑ Agakakskagesh'
]) :
(
    $choose([
        $choose($positive),
        $choose($plausible),
        $choose($uncertain),
        $choose($unplausible),
        $choose($negative)
    ])
)

)
