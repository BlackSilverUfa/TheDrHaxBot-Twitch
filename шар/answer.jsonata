(

$positive := [
    'определённо да NODDERS',
    'можешь быть уверен в этом NODDERS',
    'никаких сомнений NODDERS',
    'абсолютли NODDERS',
    'ну естественно NODDERS',
    'да NODDERS'
];

$plausible := [
    'хорошие шансы SeemsGood',
    'вероятнее всего SeemsGood',
    'думаю, что да SeemsGood',
    'не исключено SeemsGood',
    'немаловероятно SeemsGood'
];

$uncertain := [
    'пока не ясно peepoThink',
    'не уверен peepoThink',
    'тут всё не так однозначно peepoThink',
    'скажу за небольшую сумму, BSUDAI',
    'не стоит вскрывать эту тему. Вы молодые, шутливые, вам все легко. Это не то. Погибнут ВСЁ monkaGunshake'
];

$unplausible := [
    'да нет, наверное BSUHee',
    'шансы не очень BSUHee',
    'скорее нет, чем да BSUHee',
    'я бы не надеялся BSUHee'
];

$negative := [
    'даже не надейся NOPERS',
    'весьма сомнительно NOPERS',
    'определённо нет NOPERS',
    'вероятность КРАЙНЕ мала NOPERS',
    'никогда в жизни NOPERS',
    'нет, просто нет NOPERS'
];

$continuations := [
    'а всёёё BSUHee',
    'аня ANYA',
    'анлаки BSUHee',
    'алло peepoPhone',
    'ада, я люблю тебя ANYA',
    'абсолютли NODDERS',
    'аыаыа ANYA',
    'ауф 🐺',
    'апчхи ANYA',
    'амамам popCat',
    'амогус ඞ',
    'аяя AYAYA',
    'ага NODDERS',
    'ass gachiBASS',
    'ававава MEGALUL',
    
    'бан monkaBan',
    'батат BSULoot',
    'буба BOOBA',
    'боря CatCrying',
    'борода popCat',
    'блюй пей dead5What MedTime',
    
    'вертуфайзен bUrself',
    'вы продоёте рыбов? ANYA',
    'выходной PeepoComfy',

    'гивасасай monkaChrist',

    'ооо, элден ринг KOgasm',
    'оп оп PepoG',
    'оп па Pepega',
    'оползень popCat',
    'огнеопасно gachiOnFIRE',

    'мифа BibleThump',
    'мила AYAYA',
    'мегамаки gachiHYPER',
    
    'ну Дииима Jebaited',
    
    'реакция мангуста Pepega',
    
    'скайрим toddW',
    'сос мыслом ANYA',
    'сов падение BSUbl',
    'супер NODDERS',

    'испанцы! BSURage',
    'игры NODDERS',
    'игорь тонет CatCrying',
    'итан ariW',

    'уль BSUWait',
    'уву UwU',
    'ууууУУУУ BSUbl',

    'переиграю и уничтожу maestroW',
    'планер дай Jebaited',
    'повтор NODDERS',
    'поползень popCat',
    'пипа PETTHEPEEPO',
    'попа peepoGiggles',
    'понимаю NODDERS',
    'попола AYAYA',
    'девола AYAYA',
    
    'ташон CatCrying',
    
    'кб ANYA',
    'куля-буля ANYA',
    'куляля ANYA',
    'куку, ипта ANYA',
    'кукусики NomNom',
    'купи toddW',
    'крыжовник терпкий, сладкая сирень ANYA',
    'кодзима гений Kojimaptyp',
    'кози peepoBlanket',
    
    'фэмэлэ ANYA',
    
    'ыаыаы ANYA',
    
    'хубики ANYA',
    
    'эбби pepeSmack',
    'энвайронментал сторителлинг ANYA'
];

$choose := function ($l) {(
    $id := $floor($random() * $count($l));
    $l[$id]
)};

$choice := function ($x) {
    $choose([
        'скорее всего ' & $x & ' peepoThink',
        'определённо ' & $x & ' NODDERS',
        $x & ' — наш выбор SeemsGood',
        'мне кажется, что ' & $x & ' peepoThink',
        'конечно же ' & $x & ' NODDERS'
    ])
};

$indexOf := function($list, $item) {
    ($list ~> $map(function($x, $i) {
        $x = $item ? $i : null
    }) ~> $filter(function($x) { $x != null }))[0]
};

$translate := function($text, $from, $to) {(
    $from := $split($from, '');
    $to := $split($to, '');

    $text
        ~> $split('')
        ~> $map(function($x) {(
            $index := $from ~> $indexOf($x);
            $index != null ? $to[$index] : $x
        )})
        ~> $join()
)};

$distinctStr := function ($x) {
    $x ~> $split('') ~> $map(function($y, $i) {
        $y ~> $match(/[аеиоуыэ]/) and $substring($x, $i + 1, 1) = $y ? '' : $y
    }) ~> $join()
};

$startsWith := function ($x, $y) {(
    $substring($x, 0, $length($y)) = $y
)};

$startsWithAny := function ($x, $list) {
    $map($list, function($y) { $startsWith($x, $y) }) ~>
    $filter(function ($v) { $v = true }) ~> $count > 0
};

$continue := function($text) {(
    $text := $text
        ~> $lowercase
        ~> $translate('a', 'а')
        ~> $distinctStr
        ~> $replace(/\.*$/, '');

    $length($text) = 0 ? null :

    $continuations ~> $map(function($x) {
        $startsWith($x ~> $translate('a', 'а'), $text) ? (
            $substring($x, $length($text))
        ) : null
    }) ~> $filter(function($x) { $x }) ~> $choose
)};

$emotes := emotes ~> $keys ~> $map(function ($k) { $lookup(emotes, $k) });

(parsed.query ~> $length = 0) ? (
    $choose([
        'чт' & (
            $match(payload.message, /!ш+([ао]+)р+/i).groups[0]
            ~> $translate('АаОо', 'ОоАа')
        ) & '? Jebaited',
        (
            $match(payload.message, /!ш+([ао]+)р+/i).groups[0]
            ~> $translate('Оо', 'Аа')
        ) & '? Jebaited'
    ])
) :
(parsed.query ~> $match(/ (или|or) /)) ? (
    $options := parsed.query
        ~> $substringBefore('?') ~> $replace(/ (или|or) /, ', ')
        ~> $split(',') ~> $map(function ($i) { $trim($i) });

    $options := $startsWithAny($options[0] ~> $lowercase, [
        'во что',
        'что',
        'как',
        'где',
        'куда',
        'когда',
        'кто'
    ]) ? $options[[1..$count($options)]] : $options;

    ($count($options) = 2 and 'не ' & $options[0] = $options[1]) ? 'вот в чём вопрос Kojimaptyp' :
    ($count($options) = 2 and 'not ' & $options[0] = $options[1]) ? 'that is the question Kojimaptyp' :
    ($count($options) = 2 and $options[0] = $options[1]) ? 'да NODDERS' :
    (
        $choice($choose($options))
    );
) :
(parsed.query ~> $match(/от [+-]?[0-9]+ до [+-]?[0-9]+/)) ? (
    $range := (parsed.query ~> $match(/от ([+-]?[0-9]+) до ([+-]?[0-9]+)/)).groups
        ~> $map(function ($v) { $number($v ~> $replace(/\+/, '')) }) ~> $sort;

    $choice($floor($random() * ($range[1] - $range[0] + 1) + $range[0]))
) :
(parsed.query_filtered in $emotes) ? (
    parsed.query_filtered
) :
(parsed.query_filtered ~> $continue) ? (
    '...' & $continue(parsed.query_filtered)
) :
(parsed.query_filtered ~> $match(/^пинг/i)) ? (
    "понг Pepega"
) :
(parsed.query ~> $match(/^может чайку/)) ? 'а может тебя?! Jebaited' :
(parsed.query ~> $match(/^ты потрясающий/)) ? (
    $choose([
        'да, я такой Kappa',
        'нет, ты потрясающий! keanU'
    ])
):
(parsed.query ~> $match(/^[UO][wωv][UO]$/i)) ? $choose(['UωU', 'òωó', 'OωO', 'ಠ_ಠ']) :
(parsed.query ~> $match(/^(PETTHE|(не )?пип(ай|ни|\ |$))/)) ? 'пип ' & $choose([
    'PETTHEPEEPO',
    'PETTHEAPTEEPO',
    'PETTHECAT',
    'PETTHEEVAN',
    'PETTHEMOD'
]) :
(
    $choose([
        $choose($positive),
        $choose($plausible),
        $choose($uncertain),
        $choose($unplausible),
        $choose($negative)
    ])
)

)
